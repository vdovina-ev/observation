{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_logo.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/sity-planing.jpg","assets/sectors/energy.jpg","assets/sectors/energetick.jpg","assets/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/Mapa/Mapa.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logoImages","logos","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","slidesPerGroup","centeredSlides","SectorItem","sector","number","useState","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","mapboxgl","accessToken","Mapa","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","Footer","partners","author","designer","partnersLogos","logo","navLinks","App","shidLogo","ITNLogo","gcLogo","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f70f84e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.7e1db0da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.12a25e24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.638ec227.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.8a21e8b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.bb9f49bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.5ec44869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.65643b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sity-planing.f8f67844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.fb084e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetick.43f9dac6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.a8b6caee.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ({title,links,logos}) => {\r\n    const logoImages=logos.map((logoItem, i)=><img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems=links.map((link, i)=> <a href={link.href} className=\"hero-navigation-item\" key={i}>{link.title}</a>)\r\n    \r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                <div className=\"hero-partners\">\r\n                    {logoImages}\r\n                </div>\r\n                <nav className=\"hero-navigation\">\r\n                    {navItems}\r\n                </nav>\r\n                <h1 className=\"hero-title\">{title}</h1>\r\n                <a href=\"#\" className=\"hero-link\">Отследить</a>\r\n            </div>\r\n        </section>\r\n            \r\n        );\r\n    }\r\n\r\n\r\nexport default HeroBlock;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SlideFacts=({item})=>{\r\n    return(\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"\"/>\r\n            <p className=\"facts-slide-desc\">{item.desc}</p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n\r\nSwiperCore.use([Navigation,Pagination]);\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}> \r\n        <SlideFacts item={slideInfo}/>\r\n    </SwiperSlide>);\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n            <h2 className=\"facts-title\">{title}</h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <Swiper \r\n                navigation={{\r\n                        nextEl: '.swiper-button-next',\r\n                        prevEl: '.swiper-button-prev',\r\n                    }}\r\n                    pagination={{\r\n                        el:'.facts-pagination',\r\n                        clickable:true,\r\n                        renderBullet:function(index,className){\r\n                            return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n                        },\r\n                    }}\r\n                    spaceBetween={40}\r\n                    slidesPerView={3}\r\n                    slidesPerGroup={3}                                                                                                                                                                                                  \r\n                    centeredSlides={true}\r\n                    //loop={true}\r\n                    //loopFillGroupWithBlank={true}\r\n                    >\r\n                {factsSlides}\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\"/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useState} from 'react';\r\n\r\nconst SectorItem=({sector, number})=>{\r\n    const [isToolTipShowing, setToolTipShowing]=useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched]=useState(false);\r\n    const toggleToolTip=(newValue)=>{\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    };\r\n\r\n    return(\r\n        <div className=\"sectors-list-item\"\r\n            onMouseEnter={()=>toggleToolTip(true)}\r\n            onMouseLeave={()=>toggleToolTip(false)}\r\n            style={{background: `url(${sector.imgUrl}) center no-repeat`, backgroundSize:'cover'}}>\r\n        <p className=\"sectors-list-item-name\">\r\n            {sector.name}\r\n        </p>\r\n        {isToolTipShowing && <p className={`sectors-list-item-tooltip ${isDirectionSwitched ? \"sectors-list-item-tooltip-switched\" : \"\"}`}>\r\n                {sector.description}\r\n            </p>\r\n        }\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem;","import React from 'react';\r\nimport './SectorsList.scss';\r\nimport SectorItem from \"./SectorItem\";\r\n\r\nconst SectorsList = ({title,subtitle, items}) => {\r\n    const itemsList=items.map((sector, i)=><SectorItem sector={sector} number={i+1} key={i}/>)\r\n        \r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors-title\">{title}</h2>\r\n            <p className=\"sectors-subtitle\">{subtitle}</p>\r\n            <div className=\"sectors-list\">\r\n                {itemsList}\r\n            </div>\r\n        </section>\r\n            \r\n        );\r\n    };\r\n\r\nexport default SectorsList;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './Mapa.scss';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoieWFtbnlrIiwiYSI6ImNrZmxhZjZscjAwb2gycm54aWo2bGJvZnEifQ.BbYutmem-GZtYciYeMln1A';\r\n\r\nconst Mapa=()=>{\r\n\tconst mapContainer = useRef(null);\r\n\tconst [locationInfo] = useState({lng: 31,lat: 48.3,zoom: 5});\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst map = new mapboxgl.Map({container: mapContainer.current, style: 'mapbox://styles/mapbox/outdoors-v11', center: [locationInfo.lng, locationInfo.lat], zoom: locationInfo.zoom});\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<section className={'mapa container'}>\r\n\t\t\t<h2 className=\"mapa-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n\t\t\t\r\n\t\t\t<div className=\"mapa-map\" ref={mapContainer}/>\r\n\t\t\t\r\n\t\t\t<p className=\"mapa-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Mapa;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer=({partners, links, author, designer})=>{\r\n\tconst partnersLogos=partners.map((logo, i)=><img key={i} src={logo} alt={'partner logo'} className=\"footer-partners-item\"/>);\r\n\tconst navLinks=links.map((link, i)=><a href={link.href} key={i} className={'footer-nav-link'}>{link.title}</a>)\r\n\t\r\nreturn (\r\n\t<footer className=\"footer\">\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"footer-partners\">\r\n\t\t\t\t{partnersLogos}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"footer-text-wrap\">\r\n\t\t\t\t<div className=\"footer-nav\">\r\n\t\t\t\t\t{navLinks}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"footer-nav-text\">Сайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.</p>\r\n\t\t\t</div>\r\n\t\t\t<p className=\"footer-text\">2020, Все права защищены</p>\r\n\t\t\t<p className=\"footer-text\">Согласие на обработку персональных данных <br/>Политика конфиденциальности</p>\r\n\t\t</div>\r\n\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.scss';\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\nimport Facts from \"./components/Facts/Facts\";\nimport SectorsList from \"./components/SectorsList/SectorsList\";\nimport Mapa from \"./components/Mapa/Mapa\";\nimport Footer from \"./components/Footer/Footer\";\nimport gcLogo from \"./assets/GC_logo.svg\";\nimport ITNLogo from \"./assets/ITN_logo.svg\";\nimport shidLogo from \"./assets/shid_logo.svg\";\n\n\nfunction App() {\n  const partners=[shidLogo, ITNLogo, gcLogo];\n  const navLinks=[{title:\"Основные факты\", href:\"#facts\" },\n                  {title:\"Индекс качества воздуха\", href:\"#quality\" },\n                  {title:\"Политика по уменьшению загрязнений\", href:\"#politics\" }];\n  const factsSlides=[{id: '1332', imgUrl: require(\"./assets/facts-slider/slide-1.jpg\"), desc:\"Женщины и дети – главные жертвы загрязнения воздуха\"},\n                     {id: '1333', imgUrl: require(\"./assets/facts-slider/slide-2.jpg\"), desc:\"Защитники окружающей среды подвергаются преследованиям\"},\n                     {id: '1334', imgUrl: require(\"./assets/facts-slider/slide-3.jpg\"), desc:\"Загрязнение воздуха – нарушение прав человека\"},\n                     {id: '1335', imgUrl: require(\"./assets/facts-slider/slide-4.jpg\"), desc:\"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"},\n                     {id: '1336', imgUrl: require(\"./assets/facts-slider/slide-5.jpg\"), desc:\"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"}];\n  const sectors=[{name:\"Промышленность\", imgUrl: require(\"./assets/sectors/industry.jpg\"), description:\"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"},\n                 {name:\"Транспорт\", imgUrl: require(\"./assets/sectors/transport.jpg\"), description:\"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"},\n                 {name:\"Городское планирование\", imgUrl: require(\"./assets/sectors/sity-planing.jpg\"), description:\"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"},\n                 {name:\"Энергия\", imgUrl: require(\"./assets/sectors/energy.jpg\"), description:\"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"},\n                 {name:\"Энергетика\", imgUrl: require(\"./assets/sectors/energetick.jpg\"), description:\" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"},\n                 {name:\"Утилизация отходов\", imgUrl: require(\"./assets/sectors/utilisation.jpg\"), description:\"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"}];\n  const author=\"Еленой Вдовиной\"\n  const designer=\"Валерией Бубырь\"  \n  return (\n    <>\n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\n                 logos={partners}\n                 links={navLinks}/>\n      <Facts title=\"Основные факты\" slides={factsSlides}/>\n      <SectorsList title=\"Политика по уменьшению загрязнений\" subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\" items={sectors}/>\n      <Mapa/>\n      <Footer partners={partners} links={navLinks} author={author} designer={designer}/> \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}